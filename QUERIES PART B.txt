CREATE DATABASE PRIVATE_SCHOOL;

USE PRIVATE_SCHOOL;

CREATE TABLE STUDENTS (
	STU_ID INT NOT NULL AUTO_INCREMENT,
    FIRST_NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(150) NOT NULL,
    DATE_OF_BIRTH DATE NOT NULL,
    TUITION_FEES DECIMAL(6.2),
    PRIMARY KEY (STU_ID)    
    );

CREATE TABLE TRAINERS(
	TR_ID INT NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(100) NOT NULL, 
    LAST_NAME VARCHAR(150) NOT NULL,
    SUBJECT VARCHAR(50) NOT NULL,
    PRIMARY KEY (TR_ID)     
);

CREATE TABLE COURSES(
	COURSE_ID INT NOT NULL AUTO_INCREMENT,
    TITLE VARCHAR(20) NOT NULL,
    STREAM VARCHAR(20) NOT NULL,
	TYPE VARCHAR(20) NOT NULL,
	START_DATE DATE NOT NULL DEFAULT 0,
    END_DATE DATE NOT NULL DEFAULT 0,
    PRIMARY KEY (COURSE_ID)    
);

CREATE TABLE ASSIGNMENTS(
	ASM_ID INT NOT NULL AUTO_INCREMENT,
    TITLEE VARCHAR(20) NOT NULL,
    DESCRIPTION VARCHAR(200) ,
    ORAL_MARK DECIMAL(5,2) NOT NULL DEFAULT 0,
    TOTAL_MARK DECIMAL(5,2) NOT NULL DEFAULT 0,
    PRIMARY KEY (ASM_ID),
    UNIQUE (TITLEE)
);

-- INTERMEDIATE TABLE STUDENT_COURSE
CREATE TABLE STUDENT_COURSE(
	ID INT NOT NULL AUTO_INCREMENT,
    STU_ID INT NOT NULL,
    COURSE_ID INT NOT NULL,
    PRIMARY KEY (ID),
    -- UNIQUE (STU_ID,COURSE_ID),
    CONSTRAINT FK_STUDENT_COURSE_STUDENTS
    FOREIGN KEY (STU_ID) REFERENCES STUDENTS(STU_ID),
    CONSTRAINT FK_STUDENT_COURSE_COURSES
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES (COURSE_ID)    
    );
    
    -- INTERMEDIATE TABLE STUDENT_ASSIGNMENT 
    CREATE TABLE STUDENT_ASSIGNMENT(
		ID INT NOT NULL AUTO_INCREMENT,
        STU_ID INT NOT NULL,
        ASM_ID INT NOT NULL,
        ORAL_MARK INT NOT NULL DEFAULT 0,
        TOTAL_MARK INT NOT NULL DEFAULT 0,
        PRIMARY KEY (ID),
        UNIQUE(STU_ID,ASM_ID),
        CONSTRAINT FK_STUDENT_ASSIGNMENT_STUDENTS
        FOREIGN KEY (STU_ID) REFERENCES STUDENTS(STU_ID),
        CONSTRAINT FK_STUDENT_ASSIGNMENT_ASSIGNMENTS
        FOREIGN KEY (ASM_ID) REFERENCES ASSIGNMENTS(ASM_ID)        
    );
    
    -- INTERMEDIATE TABLE ASSIGNMENT_COURSE
    CREATE TABLE ASSIGNMENT_COURSE(
		ID INT NOT NULL AUTO_INCREMENT,
        ASM_ID INT NOT NULL,
        COURSE_ID INT NOT NULL,
        SUB_DATE_TIME DATETIME,
        PRIMARY KEY(ID),
        UNIQUE(ASM_ID,COURSE_ID),
	    CONSTRAINT FK_ASSIGNMENT_COURSE_ASSIGNMENTS
		FOREIGN KEY (ASM_ID) REFERENCES ASSIGNMENTS(ASM_ID),
        CONSTRAINT FK_ASSIGNMENT_COURSE_COURSES
        FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID)
    );
    
    -- INTERMEDIATE TABLE TRAINER_COURSE 
    CREATE TABLE TRAINER_COURSE(
		ID INT NOT NULL AUTO_INCREMENT,
        TR_ID INT NOT NULL,
        COURSE_ID INT NOT NULL,
        PRIMARY KEY(ID),
        UNIQUE (TR_ID,COURSE_ID),
        CONSTRAINT FK_TRAINER_COURSE_TRAINERS
        FOREIGN KEY (TR_ID) REFERENCES TRAINERS(TR_ID),
        CONSTRAINT FK_TRAINER_COURSE_COURSES
        FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID)
    );

-- INSERT DATA TO TABLE STUDENTS 
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΑΝΔΡΕΑΣ','ΜΕΛΑΔΙΑΝΟΣ','1993/09/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΠΟΛΥΚΑΡΠΟΣ','ΜΕΛΑΔΙΑΝΟΣ','1989/04/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΓΕΩΡΓΙΑ','ΜΠΟΥΛΟΥΜΠΑΣΗ','1993/12/19','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΟΡΕΣΤΗΣ','ΒΡΕΤΤΟΣ','1993/09/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΣΟΦΙΑ','ΦΑΚΑ','1995/03/07','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΚΑΤΕΡΙΝΑ','ΝΕΡΑΤΖΑΚΗ','1993/10/14','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΑΛΕΞΗΣ','ΚΗΠΟΥΡΟΣ','1990/03/08','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΑΛΕΞΑΝΔΡΟΣ','ΠΑΠΑΔΟΠΟΥΛΟΣ','1992/08/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΡΑΦΑΗΛ','ΖΙΟΥΤΗΣ','1993/07/13','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΠΑΥΛΟΣ','ΛΙΑΤΣΗΣ','1992/05/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΓΙΑΝΝΗΣ','ΧΑΣΑΠΗΣ','1993/07/24','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΘΑΝΑΣΗΣ','ΜΠΟΥΚΟΓΙΑΝΝΗΣ','1992/06/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΔΗΜΗΤΡΗΣ','ΜΙΜΙΔΗΣ','1993/10/26','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΜΙΧΑΛΗΣ','ΑΡΝΑΟΥΤ','1992/05/06','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΠΑΝΑΓΙΩΤΗΣ','ΜΑΡΑΘΙΑΝΟΣ','1993/11/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΣΑΒΒΑΣ','ΞΑΝΘΟΠΟΥΛΟΣ','1993/09/17','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΣΤΕΦΑΝΟΣ','ΞΥΛΟΥΔΗΣ','1993/09/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΡΑΝΙΑ','ΜΠΟΥΛΟΥΜΠΑΣΗ','1996/04/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΣΟΦΙΑ','ΓΟΥΝΕΛΑ','1993/09/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΔΗΜΗΤΡΑ','ΜΑΛΙΑΡΟΥ','1993/09/04','2500');
INSERT INTO STUDENTS(FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,TUITION_FEES)VALUES('ΘΑΝΟΣ','ΑΝΤΩΝΙΟΥ','1993/03/18','2500');

-- INSERT DATA TO TABLE TRAINERS
INSERT INTO TRAINERS(FIRST_NAME,LAST_NAME,SUBJECT)VALUES('ΑΡΓΥΡΗΣ','ΠΑΓΙΔΑΣ','MYSQL');
INSERT INTO TRAINERS(FIRST_NAME,LAST_NAME,SUBJECT)VALUES('ΓΙΩΡΓΟΣ','ΠΑΣΠΑΡΑΚΗΣ','JAVA');
INSERT INTO TRAINERS(FIRST_NAME,LAST_NAME,SUBJECT)VALUES('ΓΙΩΡΓΟΣ','ΗΡΑΚΛΕΙΔΗΣ','JAVA');
INSERT INTO TRAINERS(FIRST_NAME,LAST_NAME,SUBJECT)VALUES('ΝΙΚΟΣ','ΚΑΡΑΠΑΣ','JAVA');
INSERT INTO TRAINERS(FIRST_NAME,LAST_NAME,SUBJECT)VALUES('ΑΝΑΣΤΑΣΙΟΣ','ΛΕΛΑΚΗΣ','JAVA');

-- INSERT DATA TO TABLE COURSES 
INSERT INTO COURSES(TITLE,STREAM,TYPE,START_DATE,END_DATE)VALUES('JAVA','CB10','PART TIME','2020/02/17','2020/05/16');
INSERT INTO COURSES(TITLE,STREAM,TYPE,START_DATE,END_DATE)VALUES('JAVASCRIPT','CB10','FULL TIME','2020/02/17','2020/05/20');
INSERT INTO COURSES(TITLE,STREAM,TYPE,START_DATE,END_DATE)VALUES('C#','CB10','PART TIME','2020/02/17','2020/05/16');
INSERT INTO COURSES(TITLE,STREAM,TYPE,START_DATE,END_DATE)VALUES('HTML','CB10','FULL TIME','2020/02/17','2020/05/20');

-- INSERT DATA TO TABLE ASSIGNMENTS
INSERT INTO ASSIGNMENTS(TITLEE,DESCRIPTION,ORAL_MARK,TOTAL_MARK)VALUES('PROJECT BRIEF PART A','CB10,PART','20','80');
INSERT INTO ASSIGNMENTS(TITLEE,DESCRIPTION,ORAL_MARK,TOTAL_MARK)VALUES('PROJECT BRIEF PART B','CB10,FULL','20','80');
INSERT INTO ASSIGNMENTS(TITLEE,DESCRIPTION,ORAL_MARK,TOTAL_MARK)VALUES('PROJECT BRIEF PART C','CB10,PART','20','80');
INSERT INTO ASSIGNMENTS(TITLEE,DESCRIPTION,ORAL_MARK,TOTAL_MARK)VALUES('PROJECT BRIEF PART D','CB10,FULL','20','80');

-- INSERT DATA TO INTERMEDIATE TABLE STUDENT_COURSE
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('1','1');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('1','2');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('2','1');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('2','3');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('3','1');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('4','1');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('4','1');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('5','1');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('6','2');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('7','2');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('8','2');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('9','2');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('10','2');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('11','3');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('12','3');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('13','3');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('14','3');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('15','3');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('16','4');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('17','4');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('18','4');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('19','4');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('20','4');
INSERT INTO STUDENT_COURSE(STU_ID,COURSE_ID)VALUES('21','4');

-- INSERT DATA TO INTERMEDIATE TABLE ASSIGNMENT_COURSE
INSERT INTO ASSIGNMENT_COURSE (ASM_ID,COURSE_ID,SUB_DATE_TIME)VALUES('1','1','2020/02/17');
INSERT INTO ASSIGNMENT_COURSE (ASM_ID,COURSE_ID,SUB_DATE_TIME)VALUES('2','2','2020/02/17');
INSERT INTO ASSIGNMENT_COURSE (ASM_ID,COURSE_ID,SUB_DATE_TIME)VALUES('3','3','2020/02/17');
INSERT INTO ASSIGNMENT_COURSE (ASM_ID,COURSE_ID,SUB_DATE_TIME)VALUES('4','4','2020/02/17');

-- INSERT DATA TO INTERMEDIATE TABLE STUDENT ASSIGNMENT
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('1','1','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('1','2','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('2','2','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('2','3','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('3','3','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('3','4','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('4','4','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('5','1','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('6','2','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('7','3','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('8','4','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('9','1','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('10','2','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('11','3','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('11','4','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('12','4','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('13','1','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('14','2','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('15','3','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('16','4','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('17','1','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('18','2','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('19','3','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('20','4','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('20','3','20','80');
INSERT INTO STUDENT_ASSIGNMENT (STU_ID,ASM_ID,ORAL_MARK,TOTAL_MARK)VALUES('21','1','20','80');



-- INSERT DATA TO INTERMEDIATE TABLE TRAINER_COURSE
 INSERT INTO TRAINER_COURSE (TR_ID,COURSE_ID)VALUES('1','1');
 INSERT INTO TRAINER_COURSE (TR_ID,COURSE_ID)VALUES('2','2');
 INSERT INTO TRAINER_COURSE (TR_ID,COURSE_ID)VALUES('3','3');
 INSERT INTO TRAINER_COURSE (TR_ID,COURSE_ID)VALUES('4','4');
 INSERT INTO TRAINER_COURSE (TR_ID,COURSE_ID)VALUES('5','1');


SELECT * FROM STUDENTS;

SELECT * FROM COURSES;

SELECT * FROM ASSIGNMENTS;

SELECT * FROM TRAINERS;


SELECT * 
FROM STUDENTS S,STUDENT_COURSE SC
WHERE S.STU_ID=SC.STU_ID;

-- STUDENTS PER COURSE
SELECT S.FIRST_NAME,S.LAST_NAME,C.TITLE
FROM STUDENTS S
INNER JOIN STUDENT_COURSE ST
ON S.STU_ID=ST.STU_ID
INNER JOIN COURSES C
ON C.COURSE_ID=ST.COURSE_ID
ORDER BY ID;


-- ASSIGNMENTS PER COURSE
SELECT ASS.TITLEE,ASS.DESCRIPTION,C.TITLE,C.STREAM,C.TYPE
FROM ASSIGNMENTS ASS
INNER JOIN ASSIGNMENT_COURSE AC
ON ASS.ASM_ID=AC.ASM_ID
INNER JOIN COURSES C
ON C.COURSE_ID=AC.COURSE_ID
ORDER BY ID;


-- TRAINER PER COURSE 
SELECT TR.FIRST_NAME,TR.LAST_NAME,C.TITLE,C.STREAM,C.TYPE
FROM TRAINERS TR
INNER JOIN TRAINER_COURSE TC
ON TR.TR_ID=TC.ID
INNER JOIN COURSES C
ON C.COURSE_ID=TC.COURSE_ID;

-- ASSIGNMENTS PER COURSE PER STUDENT 
SELECT *
FROM ASSIGNMENTS ASS
INNER JOIN ASSIGNMENT_COURSE AC
ON ASS.ASM_ID=AC.ASM_ID
INNER JOIN COURSES C
ON C.COURSE_ID=AC.COURSE_ID
ORDER BY ID;

-- ASSIGNMENTS PER COURSE PER STUDENT
SELECT ass.titlee,c.title,c.stream,s.first_name,s.last_name 
FROM ASSIGNMENTS ASS,ASSIGNMENT_COURSE AC,COURSES C,STUDENTS S,STUDENT_COURSE ST
WHERE ASS.ASM_ID=AC.ASM_ID
AND C.COURSE_ID=AC.COURSE_ID
AND S.STU_ID=ST.STU_ID;

-- A LIST OF STUDENTS THAT BELONG ON MORE THAN ONE COURSES
SELECT S.FIRST_NAME,S.LAST_NAME,COUNT(SC.COURSE_ID) AS NUMBEROFCOURSE
FROM STUDENTS S,STUDENT_COURSE SC
WHERE S.STU_ID=SC.ID
GROUP BY SC.STU_ID
HAVING COUNT(SC.COURSE_ID)>1

SELECT * FROM TRAINERS;


SELECT * 
FROM STUDENTS S,STUDENT_COURSE SC
WHERE S.STU_ID=SC.STU_ID;

-- STUDENTS PER COURSE
SELECT S.FIRST_NAME,S.LAST_NAME,C.TITLE
FROM STUDENTS S
INNER JOIN STUDENT_COURSE ST
ON S.STU_ID=ST.STU_ID
INNER JOIN COURSES C
ON C.COURSE_ID=ST.COURSE_ID
ORDER BY ID;


-- ASSIGNMENTS PER COURSE
SELECT ASS.TITLEE,ASS.DESCRIPTION,C.TITLE,C.STREAM,C.TYPE
FROM ASSIGNMENTS ASS
INNER JOIN ASSIGNMENT_COURSE AC
ON ASS.ASM_ID=AC.ASM_ID
INNER JOIN COURSES C
ON C.COURSE_ID=AC.COURSE_ID
ORDER BY ID;


-- TRAINER PER COURSE 
SELECT TR.FIRST_NAME,TR.LAST_NAME,C.TITLE,C.STREAM,C.TYPE
FROM TRAINERS TR
INNER JOIN TRAINER_COURSE TC
ON TR.TR_ID=TC.ID
INNER JOIN COURSES C
ON C.COURSE_ID=TC.COURSE_ID;

-- ASSIGNMENTS PER COURSE PER STUDENT 
SELECT *
FROM ASSIGNMENTS ASS
INNER JOIN ASSIGNMENT_COURSE AC
ON ASS.ASM_ID=AC.ASM_ID
INNER JOIN COURSES C
ON C.COURSE_ID=AC.COURSE_ID
ORDER BY ID;

-- ASSIGNMENTS PER COURSE PER STUDENT
SELECT ass.titlee,c.title,c.stream,s.first_name,s.last_name 
FROM ASSIGNMENTS ASS,ASSIGNMENT_COURSE AC,COURSES C,STUDENTS S,STUDENT_COURSE ST
WHERE ASS.ASM_ID=AC.ASM_ID
AND C.COURSE_ID=AC.COURSE_ID
AND S.STU_ID=ST.STU_ID;

-- A LIST OF STUDENTS THAT BELONG ON MORE THAN ONE COURSES
SELECT S.FIRST_NAME,S.LAST_NAME,COUNT(SC.COURSE_ID) AS NUMBEROFCOURSE
FROM STUDENTS S,STUDENT_COURSE SC
WHERE S.STU_ID=SC.ID
GROUP BY SC.STU_ID
HAVING COUNT(SC.COURSE_ID)>1